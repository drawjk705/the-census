name: publish

on:
    push:
        branches:
            - main

jobs:
    publish:
        runs-on: ubuntu-latest
        steps:
            - name: check out repo
              uses: actions/checkout@v2

            - name: set up python
              uses: actions/setup-python@v2
              with:
                  python-version: 3.9

            - name: Install Poetry Action
              uses: snok/install-poetry@v1.1.1
              with:
                  version: 1.1.4
                  virtualenvs-create: true
                  virtualenvs-in-project: true

            - name: load cached venv
              id: cached-poetry-dependencies
              uses: actions/cache@v2
              with:
                  path: .venv
                  key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

            - name: install poetry dependencies
              run: poetry install
              if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

            - name: bump major
              if: startsWith(github.event.head_commit.message, 'breaking:')
              run: |
                  poetry version major

            - name: bump patch
              if: ${{ startsWith(github.event.head_commit.message, 'fix:') || startsWith(github.event.head_commit.message, 'patch:' )}}
              run: |
                  poetry version patch

            - name: bump minor
              run: |
                  poetry version minor

            - name: build and publish
              run: |
                  export VERSION=$(poetry version)
                  export VERSION=${VERSION#"us-stats "}
                  echo $VERSION

                  echo "version=$(VERSION)" >> $GITHUB_ENV

              #   poetry build
              #   poetry config pypi-token.testpypi $PYPI_TEST_TOKEN
              #   poetry publish -r testpypi
              env:
                  PYPI_TEST_TOKEN: ${{ secrets.PYPI_TEST_TOKEN }}

            - name: echo it
              run: |
                  echo $version
