name: Test
on:
    push:
    pull_request:
        branches:
            - '**'

jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: [3.6, 3.7, 3.8, 3.9]
            fail-fast: false

        steps:
            - uses: actions/checkout@v2
            - name: set up python
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}
            - name: get full python version
              id: full-python-version
              run: |
                  echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

            - name: install poetry
              run: |
                  curl -fsS -o get-poetry.py https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py
                  python get-poetry.py -y
                  echo "::set-env name=PATH::$HOME/.poetry/bin:$PATH"
            - name: configure poetry
              run: poetry config virtualenvs.in-project true
            - name: set up cache
              uses: actions/cache@v2
              id: cache
              with:
                  path: .venv
                  key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
            - name: ensure cache is healthy
              if: steps.cache.outputs.cache-hit == 'true'
              run: poetry run pip --version >/dev/null 2>&1 || rm -rf .venv
            - name: install dependencies
              run: poetry install
            - name: test
              run: |
                  poetry shell
                  poe test-coverage
            - name: upload coverage
              uses: codecov/codecov-action@v1
